name: 'xcresulttool-test-results'
description: 'Generate a markdown summary from xcresulttool test-results summary'
inputs:
  xcresult-path:
    description: 'Path to the .xcresult bundle'
    required: true
  show-each-test-results:
    description: 'Print each test results'
    required: false
    default: 'false'
  output-md:
    description: 'Path to output markdown file'
    required: false
    default: 'test-summary.md'
branding:
  icon: 'book-open'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - name: Check OS
      shell: bash
      run: |
        if [[ "$RUNNER_OS" != "macOS" ]]; then
          echo "This action only works on macOS runners."
          exit 1
        fi

    - name: Install jq
      shell: bash
      run: |
        if ! command -v jq &> /dev/null; then
          brew install jq
        fi

    - name: Extract summary.json from xcresult
      shell: bash
      run: |
        xcrun xcresulttool get test-results summary --path "${{ inputs.xcresult-path }}" > summary.json

    - name: Generate Markdown Summary
      shell: bash
      run: |
        bash ${{ github.action_path }}/entrypoint.sh summary.json "${{ inputs.output-md }}"

    - name: Extract test-results from xcresult
      shell: bash
      if: ${{ inputs.show-each-test-results }} == 'true'
      run: |
        xcrun xcresulttool get test-results tests --path "${{ inputs.xcresult-path }}" > test-results.json

    - name: Generate Markdown Test-Results
      shell: bash
      if: ${{ inputs.show-each-test-results }} == 'true'
      run: |
        bash ${{ github.action_path }}/test-results.sh test-results.json "${{ inputs.output-md }}"

    - name: Upload Markdown to Job Summary
      shell: bash
      run: |
        cat "${{ inputs.output-md }}" >> $GITHUB_STEP_SUMMARY
